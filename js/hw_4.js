// #### Task 1 üíª
let sum = 0;
const getSum = function (until) {
    for (i = 1; i <= until; i++) {
        sum += i;
    }
    return sum;
}
console.log(getSum(+prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')));

// #### Task 2 üíª
const countCredit = function (sum, years) {
  let rate = 0.17;
  let notChangeSum = sum;
  let i = years * 12;
  let genneralMonthPay = sum / i;
  let currentMonth = 0;
  let totalPay = 0;
  for (; i > 0; i--) {
    currentMonth = genneralMonthPay + rate * sum;
    totalPay += currentMonth;
    sum = sum - currentMonth;
  }

  return  totalPay - notChangeSum;
};
let amount = countCredit(
  +prompt("–≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞"),
  +prompt("–≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞")
);
console.log(amount);

// #### Task 3 üíª
let stringLength1 = prompt("–≤–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É");
let trimFirst = +prompt(
  "–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –≤–≤–∏–¥–µ —á–∏—Å–ª–∞, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–µ –æ–±—Ä–µ–∑–∞—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—É—é –≤—ã—à–µ —Å—Ç—Ä–æ–∫—É",
  "0"
);
let trimSecond = +prompt(
  "–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –≤–≤–∏–¥–µ —á–∏—Å–ª–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–µ –æ–±—Ä–µ–∑–∞—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—É—é –≤—ã—à–µ —Å—Ç—Ä–æ–∫—É",
  "2"
);
const trimString = function (stringLength, valueFrom, valueTo) {
  return stringLength.slice(valueFrom, valueTo);
};
let result3 = trimString(stringLength1, trimFirst, trimSecond);
console.log(result3);

// #### Task 4 üíª
const getSumNumbers = function (figure) {
  let sum = 0;
  let arr = figure.split("");
  for (i = 0; i < arr.length; i++) {
    sum = sum + +arr[i];
  }
  return sum;
};
let result4 = getSumNumbers(prompt("–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ"));
console.log(result4);

// #### Task 5 üíª
const getSum5 = function (a, b) {
  let sum = 0;
    if (a !== b) {
        if (a > b) {
            for (; b <= a; b++) {
                sum += b;
            }
        } else if (a < b) {
            for (; a <= b; a++) {
                sum += a;
            }
        }
    } else {
        sum = a;
    }
    return sum;
}
let keepGetSum = getSum5(+prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ'), +prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ'));
alert(keepGetSum);

// #### Task 6 üíª(–ò–∑—É—á–∏—Ç—å –∫–∞–∫ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞)
const foo = function() {
    console.log('foo')
}
const boo = function() {
    console.log('boo')
}
let pox = confirm('–µ—Å–ª–∏ –æ–∫ —Ç–æ —Ñ—É—É, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –±—É—É');
const getFooBoo = function(firstOption, secondOption, bool) {
    if (bool) {
        firstOption()
    } else {
        secondOption()
    }
}
getFooBoo(foo, boo, pox)

// ### ADVANCED level

// #### Task 1 üë®‚Äçüè´
let firstSide = +prompt('–≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞');
let secondSide = +prompt('–≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞');
let thirdSide = +prompt('–≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞');
const checkBuiltTriangle = function(a,b,c) {
    if ((a+b> c) && (b+c > a) && (a+c > b)) {
        alert('—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –º–æ–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å')
    } else {
        alert('–ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
    }
}
checkBuiltTriangle(firstSide, secondSide, thirdSide)

// #### Task 2 üë®‚Äçüè´
let getCrashChocolate = function (x, y) {
  if(x && y) {
    let advancedResult2 = x * y - 1;
    console.log(advancedResult2);
  } else {
    console.log('–ø–æ–ª—É—á–∞–µ—Ç—Å—è —à–æ–∫–æ–ª–∞–¥–∫–∏ –Ω–µ—Ç')
  }
  
};
getCrashChocolate(
  +prompt("–≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ä–∞–∑–º–µ—Ä–∞ —à–æ–∫–æ–ª–∞–¥–∫–∏"),
  +prompt("–≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä—É—é —Å—Ç–æ—Ä–æ–Ω—É —Ä–∞–∑–º–µ—Ä–∞ —à–æ–∫–æ–ª–∞–¥–∫–∏")
);
