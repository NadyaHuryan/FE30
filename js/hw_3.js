// #### Task 1 üíª
let height = 15,
    width = 20;
if (height > width) {
    console.log(`–≤—ã—Å–æ—Ç–∞ - ${height}`)
} else if (height == width) {
    console.log(`–∫–≤–∞–¥—Ä–∞—Ç - —Å—Ç–æ—Ä–æ–Ω—ã —Ä–∞–≤–Ω—ã`)
} else {
    console.log(`—à–∏—Ä–∏–Ω–∞ - ${width}`)
}

// #### Task 2 üíª
let sum = 0;
for (let i = 1; i <= 5; i++) {
    sum += i;
    console.log(`—Å—É–º–º–∞ —á–∏—Å–µ–ª –∏–∑ ${i} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${sum}`)
}

// #### Task 3 üíª
for (let i = 1; i <= 20; i++) {
    if (i % 3 == 0) {
        console.log(i)
    }
}

// #### Task 4 üíª
let key = true,
    documents = true,
    pen = true,
    apple = false,
    orange = true,
    shouldGoToWork;

shouldGoToWork = key && documents && pen && (apple || orange)
if (shouldGoToWork) {
    console.log(`—Ç—ã –≤—Å—ë –≤–∑—è–ª`)
} else {
    console.log(`—Ç—ã —á—Ç–æ-—Ç–æ –∑–∞–±—ã–ª`)

}

// #### Task 5 üíª
let number1 = +prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
if (number1 % 3 == 0 && number1 % 5 == 0 && number1 != 0) {
    alert('FizBuz')
} else if (number1 % 3 == 0 && number1 != 0) {
    alert('Buz')
} else if (number1 % 5 == 0 && number1 != 0) {
    alert('Fiz')
} else if (number1 == 0) {
    alert('–≤—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ')
}

// #### Task 6 üíª

let age = +prompt('–≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç');
if (age > 18 && number1 != 0) {
    alert('–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω')
} else if (age <= 18 && age >= 16 && number1 != 0) {
    alert('–£–∂–µ –ø–æ—á—Ç–∏')
} else if (age < 18 && number1 != 0) {
    alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω')
} else {
    alert('–≤—ã –Ω–µ –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ')
}

// #### Task 7 üíª
let direction = prompt('–ö—É–¥–∞ –±—ã –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å ? –í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '—é–≥');
switch (direction) {
    case '—é–≥':
        console.log('–Ω–∞ —é–≥ –ø–æ–π–¥–µ—à—å —Å—á–∞—Å—Ç—å–µ –Ω–∞–π–¥–µ—à—å')
        break;
    case '—Å–µ–≤–µ—Ä':
        console.log('–Ω–∞ —Å–µ–≤–µ—Ä –ø–æ–π–¥–µ—à—å –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥ –Ω–∞–π–¥–µ—à—å')
        break;
    case '–∑–∞–ø–∞–¥':
        console.log('–Ω–∞ –∑–∞–ø–∞–¥ –ø–æ–π–¥–µ—à—å –≤–µ—Ä–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –Ω–∞–π–¥–µ—à—å')
        break;
    case '–≤–æ—Å—Ç–æ–∫':
        console.log('–Ω–∞ –≤–æ—Å—Ç–æ–∫ –ø–æ–π–¥–µ—à—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —Å—Ç–∞–Ω–µ—à—å')
        break;
    default:
        console.log('–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
        break;
}

// ### ADVANCED level
// #### Task 1 üë®‚Äçüè´
let enterNumber = 1;
let sum2 = 0;
for (i = 1; enterNumber; i++) {
    enterNumber = +prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ');
    sum2 += enterNumber;
    if (isNaN(enterNumber)) {
        console.log('–æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞')
        document.write('–æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞');
    } else {
        console.log(`–æ–±—â–∞—è —Å—É–º–º–∞ ${sum2}, —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ ${sum2 / i}`)
        document.write(`–æ–±—â–∞—è —Å—É–º–º–∞ ${sum2}, —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ ${sum2 / i} `);
    }
}

// #### Task 2 üë®‚Äçüè´ 
let minus, plus, multiplication, share, result1;
let number3 = +prompt('–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ');
if (!(isNaN(number3))) {
    minus = +prompt('—Å–∫–æ–ª—å–∫–æ –æ—Ç–Ω—è—Ç—å?');
}
if (!(isNaN(minus))) {
    plus = +prompt('—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–±–∞–≤–∏—Ç—å?');
}
if (!(isNaN(plus))) {
    multiplication = +prompt('–Ω–∞ —Å–∫–æ–ª—å–∫–æ —É–º–Ω–æ–∂–∏—Ç—å?');
}
if (!(isNaN(multiplication))) {
    share = +prompt('–Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å? ');
}
if (share) {
    result1 = `${(number3 - minus + plus) * multiplication / share}`;
    if (isNaN(result1)) {
        alert('–≤—ã –≤–≤–µ–ª–∏ –Ω–µ  –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è')
    } else {
        alert(`((((${number3} - ${minus})+${plus})*${multiplication})/${share}) = ${result1}`);
        console.log(`((((${number3} - ${minus})+${plus})*${multiplication})/${share}) = ${result1}`);
        document.write('</br>' + `((((${number3} - ${minus})+${plus})*${multiplication})/${share}) = ${result1}` + '</br>');
    }
} else if (share == 0) {
    alert('–Ω–∞ 0 –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è')
}

// #### Task 3 üë®‚Äçüè´
let ij;
let grid = '';
let onegrid = '#'
do {
    ij = confirm('–Ω–∞–∂–º–∏—Ç–µ –æ–∫, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∏—Å–æ–≤–∞—Ç—å –ª–µ—Å—Ç–Ω–∏—Ü—É');
    grid += onegrid;
    console.log(grid);
    document.write(grid + '</br>');
} while (ij)